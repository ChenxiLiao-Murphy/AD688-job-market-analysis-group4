{
  "hash": "f8b1e6e2c77c978ad43e9427a0b8ec43",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Data Cleaning\"\nsubtitle: \"Data Preparation and Exploratory Insights for Geographic and Remote Work Trends\"\n\nbibliography: references.bib\ncsl: csl/econometrica.csl\nformat: \n  html:\n    toc: true\n    number-sections: true\n    df-print: paged\n---\n\n\n# Data Cleaning & Exploration\n\nThis page provides an overview of the data cleaning and initial exploration process for the job market dataset.\n\n_Content will be added here._\n\n\n\n\n## 1. Load Dataset\n\n::: {#68718822 .cell results='hide' execution_count=1}\n``` {.python .cell-code code-fold=\"true\"}\nimport pandas as pd\ndf1 = pd.read_csv(\"./data/lightcast_job_postings.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/var/folders/4f/s815nnpx1_15rfdwxj6cwrtr0000gn/T/ipykernel_8078/3038307670.py:2: DtypeWarning: Columns (19,30) have mixed types. Specify dtype option on import or set low_memory=False.\n  df1 = pd.read_csv(\"./data/lightcast_job_postings.csv\")\n```\n:::\n:::\n\n\n::: {#b79a8b9f .cell results='hide' execution_count=2}\n``` {.python .cell-code code-fold=\"true\"}\ndf1.head()\ndf1.info()\ndf1.describe()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 72498 entries, 0 to 72497\nColumns: 131 entries, ID to NAICS_2022_6_NAME\ndtypes: float64(38), object(93)\nmemory usage: 72.5+ MB\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DUPLICATES</th>\n      <th>DURATION</th>\n      <th>MODELED_DURATION</th>\n      <th>COMPANY</th>\n      <th>MIN_EDULEVELS</th>\n      <th>MAX_EDULEVELS</th>\n      <th>EMPLOYMENT_TYPE</th>\n      <th>MIN_YEARS_EXPERIENCE</th>\n      <th>MAX_YEARS_EXPERIENCE</th>\n      <th>SALARY</th>\n      <th>...</th>\n      <th>LOT_OCCUPATION_GROUP</th>\n      <th>LOT_V6_SPECIALIZED_OCCUPATION</th>\n      <th>LOT_V6_OCCUPATION</th>\n      <th>LOT_V6_OCCUPATION_GROUP</th>\n      <th>LOT_V6_CAREER_AREA</th>\n      <th>NAICS_2022_2</th>\n      <th>NAICS_2022_3</th>\n      <th>NAICS_2022_4</th>\n      <th>NAICS_2022_5</th>\n      <th>NAICS_2022_6</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>72476.000000</td>\n      <td>45182.000000</td>\n      <td>53208.000000</td>\n      <td>7.245400e+04</td>\n      <td>72454.000000</td>\n      <td>16315.000000</td>\n      <td>72454.000000</td>\n      <td>49352.000000</td>\n      <td>8430.000000</td>\n      <td>30808.000000</td>\n      <td>...</td>\n      <td>72454.000000</td>\n      <td>7.245400e+04</td>\n      <td>72454.000000</td>\n      <td>72454.000000</td>\n      <td>72454.000000</td>\n      <td>72454.000000</td>\n      <td>72454.000000</td>\n      <td>72454.000000</td>\n      <td>72454.000000</td>\n      <td>72454.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.081627</td>\n      <td>22.322695</td>\n      <td>19.737615</td>\n      <td>3.702704e+07</td>\n      <td>31.482527</td>\n      <td>2.833834</td>\n      <td>1.058768</td>\n      <td>5.486444</td>\n      <td>3.773903</td>\n      <td>117953.755031</td>\n      <td>...</td>\n      <td>2239.204475</td>\n      <td>2.239318e+07</td>\n      <td>223931.694096</td>\n      <td>2239.204475</td>\n      <td>22.281158</td>\n      <td>58.352555</td>\n      <td>587.864590</td>\n      <td>5883.121995</td>\n      <td>58834.317125</td>\n      <td>588345.683937</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>2.807512</td>\n      <td>14.359085</td>\n      <td>12.963769</td>\n      <td>3.015089e+07</td>\n      <td>44.747433</td>\n      <td>0.584028</td>\n      <td>0.286997</td>\n      <td>3.322241</td>\n      <td>2.576739</td>\n      <td>45133.878359</td>\n      <td>...</td>\n      <td>285.424309</td>\n      <td>2.854275e+06</td>\n      <td>28542.747473</td>\n      <td>285.424309</td>\n      <td>2.854360</td>\n      <td>18.626415</td>\n      <td>186.259064</td>\n      <td>1864.093904</td>\n      <td>18642.971892</td>\n      <td>186431.744508</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000e+00</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>15860.000000</td>\n      <td>...</td>\n      <td>1111.000000</td>\n      <td>1.111101e+07</td>\n      <td>111110.000000</td>\n      <td>1111.000000</td>\n      <td>11.000000</td>\n      <td>11.000000</td>\n      <td>111.000000</td>\n      <td>1111.000000</td>\n      <td>11115.000000</td>\n      <td>111150.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.000000</td>\n      <td>11.000000</td>\n      <td>10.000000</td>\n      <td>6.505993e+06</td>\n      <td>2.000000</td>\n      <td>3.000000</td>\n      <td>1.000000</td>\n      <td>3.000000</td>\n      <td>2.000000</td>\n      <td>84928.500000</td>\n      <td>...</td>\n      <td>2310.000000</td>\n      <td>2.310101e+07</td>\n      <td>231010.000000</td>\n      <td>2310.000000</td>\n      <td>23.000000</td>\n      <td>52.000000</td>\n      <td>522.000000</td>\n      <td>5223.000000</td>\n      <td>52232.000000</td>\n      <td>522320.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.000000</td>\n      <td>18.000000</td>\n      <td>16.000000</td>\n      <td>3.761516e+07</td>\n      <td>2.000000</td>\n      <td>3.000000</td>\n      <td>1.000000</td>\n      <td>5.000000</td>\n      <td>3.000000</td>\n      <td>116300.000000</td>\n      <td>...</td>\n      <td>2311.000000</td>\n      <td>2.311131e+07</td>\n      <td>231113.000000</td>\n      <td>2311.000000</td>\n      <td>23.000000</td>\n      <td>54.000000</td>\n      <td>541.000000</td>\n      <td>5415.000000</td>\n      <td>54151.000000</td>\n      <td>541519.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1.000000</td>\n      <td>32.000000</td>\n      <td>28.000000</td>\n      <td>4.330689e+07</td>\n      <td>99.000000</td>\n      <td>3.000000</td>\n      <td>1.000000</td>\n      <td>8.000000</td>\n      <td>5.000000</td>\n      <td>145600.000000</td>\n      <td>...</td>\n      <td>2311.000000</td>\n      <td>2.311131e+07</td>\n      <td>231113.000000</td>\n      <td>2311.000000</td>\n      <td>23.000000</td>\n      <td>56.000000</td>\n      <td>561.000000</td>\n      <td>5614.000000</td>\n      <td>56149.000000</td>\n      <td>561499.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>100.000000</td>\n      <td>59.000000</td>\n      <td>59.000000</td>\n      <td>1.082365e+08</td>\n      <td>99.000000</td>\n      <td>4.000000</td>\n      <td>3.000000</td>\n      <td>15.000000</td>\n      <td>14.000000</td>\n      <td>500000.000000</td>\n      <td>...</td>\n      <td>2712.000000</td>\n      <td>2.712111e+07</td>\n      <td>271211.000000</td>\n      <td>2712.000000</td>\n      <td>27.000000</td>\n      <td>99.000000</td>\n      <td>999.000000</td>\n      <td>9999.000000</td>\n      <td>99999.000000</td>\n      <td>999999.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows Ã— 38 columns</p>\n</div>\n```\n:::\n:::\n\n\n##  Check Columns' Information \n\n::: {#6dd03802 .cell results='hide' execution_count=3}\n``` {.python .cell-code code-fold=\"true\"}\ndf1.columns.tolist()\nprint(df1.columns.tolist())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['ID', 'LAST_UPDATED_DATE', 'LAST_UPDATED_TIMESTAMP', 'DUPLICATES', 'POSTED', 'EXPIRED', 'DURATION', 'SOURCE_TYPES', 'SOURCES', 'URL', 'ACTIVE_URLS', 'ACTIVE_SOURCES_INFO', 'TITLE_RAW', 'BODY', 'MODELED_EXPIRED', 'MODELED_DURATION', 'COMPANY', 'COMPANY_NAME', 'COMPANY_RAW', 'COMPANY_IS_STAFFING', 'EDUCATION_LEVELS', 'EDUCATION_LEVELS_NAME', 'MIN_EDULEVELS', 'MIN_EDULEVELS_NAME', 'MAX_EDULEVELS', 'MAX_EDULEVELS_NAME', 'EMPLOYMENT_TYPE', 'EMPLOYMENT_TYPE_NAME', 'MIN_YEARS_EXPERIENCE', 'MAX_YEARS_EXPERIENCE', 'IS_INTERNSHIP', 'SALARY', 'REMOTE_TYPE', 'REMOTE_TYPE_NAME', 'ORIGINAL_PAY_PERIOD', 'SALARY_TO', 'SALARY_FROM', 'LOCATION', 'CITY', 'CITY_NAME', 'COUNTY', 'COUNTY_NAME', 'MSA', 'MSA_NAME', 'STATE', 'STATE_NAME', 'COUNTY_OUTGOING', 'COUNTY_NAME_OUTGOING', 'COUNTY_INCOMING', 'COUNTY_NAME_INCOMING', 'MSA_OUTGOING', 'MSA_NAME_OUTGOING', 'MSA_INCOMING', 'MSA_NAME_INCOMING', 'NAICS2', 'NAICS2_NAME', 'NAICS3', 'NAICS3_NAME', 'NAICS4', 'NAICS4_NAME', 'NAICS5', 'NAICS5_NAME', 'NAICS6', 'NAICS6_NAME', 'TITLE', 'TITLE_NAME', 'TITLE_CLEAN', 'SKILLS', 'SKILLS_NAME', 'SPECIALIZED_SKILLS', 'SPECIALIZED_SKILLS_NAME', 'CERTIFICATIONS', 'CERTIFICATIONS_NAME', 'COMMON_SKILLS', 'COMMON_SKILLS_NAME', 'SOFTWARE_SKILLS', 'SOFTWARE_SKILLS_NAME', 'ONET', 'ONET_NAME', 'ONET_2019', 'ONET_2019_NAME', 'CIP6', 'CIP6_NAME', 'CIP4', 'CIP4_NAME', 'CIP2', 'CIP2_NAME', 'SOC_2021_2', 'SOC_2021_2_NAME', 'SOC_2021_3', 'SOC_2021_3_NAME', 'SOC_2021_4', 'SOC_2021_4_NAME', 'SOC_2021_5', 'SOC_2021_5_NAME', 'LOT_CAREER_AREA', 'LOT_CAREER_AREA_NAME', 'LOT_OCCUPATION', 'LOT_OCCUPATION_NAME', 'LOT_SPECIALIZED_OCCUPATION', 'LOT_SPECIALIZED_OCCUPATION_NAME', 'LOT_OCCUPATION_GROUP', 'LOT_OCCUPATION_GROUP_NAME', 'LOT_V6_SPECIALIZED_OCCUPATION', 'LOT_V6_SPECIALIZED_OCCUPATION_NAME', 'LOT_V6_OCCUPATION', 'LOT_V6_OCCUPATION_NAME', 'LOT_V6_OCCUPATION_GROUP', 'LOT_V6_OCCUPATION_GROUP_NAME', 'LOT_V6_CAREER_AREA', 'LOT_V6_CAREER_AREA_NAME', 'SOC_2', 'SOC_2_NAME', 'SOC_3', 'SOC_3_NAME', 'SOC_4', 'SOC_4_NAME', 'SOC_5', 'SOC_5_NAME', 'LIGHTCAST_SECTORS', 'LIGHTCAST_SECTORS_NAME', 'NAICS_2022_2', 'NAICS_2022_2_NAME', 'NAICS_2022_3', 'NAICS_2022_3_NAME', 'NAICS_2022_4', 'NAICS_2022_4_NAME', 'NAICS_2022_5', 'NAICS_2022_5_NAME', 'NAICS_2022_6', 'NAICS_2022_6_NAME']\n```\n:::\n:::\n\n\n##  Dropping Unnecessary Columns\n\n::: {#beb8135d .cell results='hide' execution_count=4}\n``` {.python .cell-code code-fold=\"true\"}\n# Define columns that are irrelevant or redundant for our analysis\ncolumns_to_drop = [\n    # Tracking and metadata\n    \"ID\", \"LAST_UPDATED_DATE\", \"LAST_UPDATED_TIMESTAMP\", \"DUPLICATES\",\n    \"URL\", \"ACTIVE_URLS\", \"ACTIVE_SOURCES_INFO\", \"SOURCE_TYPES\", \"SOURCES\",\n\n    # Company raw info\n    \"COMPANY_RAW\", \"COMPANY_IS_STAFFING\",\n\n    # Raw or text-heavy fields\n    \"TITLE_RAW\", \"BODY\",\n\n    # Modeled / derived fields\n    \"MODELED_EXPIRED\", \"MODELED_DURATION\",\n\n    # Educational levels (redundant versions)\n    \"EDUCATION_LEVELS\", \"EDUCATION_LEVELS_NAME\",\n    \"MIN_EDULEVELS\", \"MIN_EDULEVELS_NAME\", \"MAX_EDULEVELS\",\n\n    # Redundant NAICS / SOC codes\n    \"NAICS_2022_2\", \"NAICS_2022_2_NAME\",\n    \"NAICS_2022_3\", \"NAICS_2022_3_NAME\",\n    \"SOC_2\", \"SOC_3\", \"SOC_5\"\n]\n\n# Drop columns, ignore if a column is missing\ndf1.drop(columns=columns_to_drop, inplace=True, errors=\"ignore\")\n\n# Display the first few rows to confirm\ndf1.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>POSTED</th>\n      <th>EXPIRED</th>\n      <th>DURATION</th>\n      <th>COMPANY</th>\n      <th>COMPANY_NAME</th>\n      <th>MAX_EDULEVELS_NAME</th>\n      <th>EMPLOYMENT_TYPE</th>\n      <th>EMPLOYMENT_TYPE_NAME</th>\n      <th>MIN_YEARS_EXPERIENCE</th>\n      <th>MAX_YEARS_EXPERIENCE</th>\n      <th>...</th>\n      <th>SOC_4_NAME</th>\n      <th>SOC_5_NAME</th>\n      <th>LIGHTCAST_SECTORS</th>\n      <th>LIGHTCAST_SECTORS_NAME</th>\n      <th>NAICS_2022_4</th>\n      <th>NAICS_2022_4_NAME</th>\n      <th>NAICS_2022_5</th>\n      <th>NAICS_2022_5_NAME</th>\n      <th>NAICS_2022_6</th>\n      <th>NAICS_2022_6_NAME</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6/2/2024</td>\n      <td>6/8/2024</td>\n      <td>6.0</td>\n      <td>894731.0</td>\n      <td>Murphy USA</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>Full-time (&gt; 32 hours)</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>...</td>\n      <td>Data Scientists</td>\n      <td>Data Scientists</td>\n      <td>[\\n  7\\n]</td>\n      <td>[\\n  \"Artificial Intelligence\"\\n]</td>\n      <td>4413.0</td>\n      <td>Automotive Parts, Accessories, and Tire Retailers</td>\n      <td>44133.0</td>\n      <td>Automotive Parts and Accessories Retailers</td>\n      <td>441330.0</td>\n      <td>Automotive Parts and Accessories Retailers</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6/2/2024</td>\n      <td>8/1/2024</td>\n      <td>NaN</td>\n      <td>133098.0</td>\n      <td>Smx Corporation Limited</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>Full-time (&gt; 32 hours)</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>...</td>\n      <td>Data Scientists</td>\n      <td>Data Scientists</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5613.0</td>\n      <td>Employment Services</td>\n      <td>56132.0</td>\n      <td>Temporary Help Services</td>\n      <td>561320.0</td>\n      <td>Temporary Help Services</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6/2/2024</td>\n      <td>7/7/2024</td>\n      <td>35.0</td>\n      <td>39063746.0</td>\n      <td>Sedgwick</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>Full-time (&gt; 32 hours)</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>Data Scientists</td>\n      <td>Data Scientists</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5242.0</td>\n      <td>Agencies, Brokerages, and Other Insurance Rela...</td>\n      <td>52429.0</td>\n      <td>Other Insurance Related Activities</td>\n      <td>524291.0</td>\n      <td>Claims Adjusting</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6/2/2024</td>\n      <td>7/20/2024</td>\n      <td>48.0</td>\n      <td>37615159.0</td>\n      <td>Wells Fargo</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>Full-time (&gt; 32 hours)</td>\n      <td>3.0</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>Data Scientists</td>\n      <td>Data Scientists</td>\n      <td>[\\n  6\\n]</td>\n      <td>[\\n  \"Data Privacy/Protection\"\\n]</td>\n      <td>5221.0</td>\n      <td>Depository Credit Intermediation</td>\n      <td>52211.0</td>\n      <td>Commercial Banking</td>\n      <td>522110.0</td>\n      <td>Commercial Banking</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6/2/2024</td>\n      <td>6/17/2024</td>\n      <td>15.0</td>\n      <td>0.0</td>\n      <td>Unclassified</td>\n      <td>NaN</td>\n      <td>3.0</td>\n      <td>Part-time / full-time</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>Data Scientists</td>\n      <td>Data Scientists</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>9999.0</td>\n      <td>Unclassified Industry</td>\n      <td>99999.0</td>\n      <td>Unclassified Industry</td>\n      <td>999999.0</td>\n      <td>Unclassified Industry</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 104 columns</p>\n</div>\n```\n:::\n:::\n\n\n##  Handling Missing Values\n\n::: {#72c26489 .cell results='hide' execution_count=5}\n``` {.python .cell-code code-fold=\"true\"}\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nos.makedirs(\"figureswxw\", exist_ok=True)\n```\n:::\n\n\n::: {#cell-Missing Value Heatmap .cell execution_count=6}\n``` {.python .cell-code code-fold=\"true\"}\nimport missingno as msno\nimport matplotlib.pyplot as plt\nmsno.heatmap(df1)\n\nplt.title(\"Missing Values Heatmap\")\nplt.tight_layout()\nplt.savefig(\"figureswxw/missing_values_heatmap.png\", dpi=300)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Missing values in the dataset](data_cleaning_files/figure-html/missing-value-heatmap-output-1.png){#missing-value-heatmap width=1781 height=1140 fig-align='center'}\n:::\n:::\n\n\n![](figureswxw/missing_values_heatmap.png){width=100% fig-align='center'}\n\n::: {#d017f986 .cell execution_count=7}\n``` {.python .cell-code code-fold=\"true\"}\n# Drop columns with >50% missing values\ndf1.dropna(axis=1, thresh=len(df1) * 0.5, inplace=True)\n\n\nif \"SALARY\" in df1.columns:\n    df1[\"SALARY\"] = df1[\"SALARY\"].fillna(df1[\"SALARY\"].median())\n\n    df1[\"DURATION\"] = df1[\"DURATION\"].fillna(df1[\"DURATION\"].median())\n\ncategorical_columns = [\"REMOTE_TYPE_NAME\", \"COMPANY_NAME\", \"MAX_EDULEVELS_NAME\"]\n\nfor col in categorical_columns:\n    if col in df1.columns:\n        df1[col] = df1[col].fillna(\"Unknown\")\n\n\ndf1.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 72498 entries, 0 to 72497\nData columns (total 96 columns):\n #   Column                              Non-Null Count  Dtype  \n---  ------                              --------------  -----  \n 0   POSTED                              72476 non-null  object \n 1   EXPIRED                             64654 non-null  object \n 2   DURATION                            45182 non-null  float64\n 3   COMPANY                             72454 non-null  float64\n 4   COMPANY_NAME                        72498 non-null  object \n 5   EMPLOYMENT_TYPE                     72454 non-null  float64\n 6   EMPLOYMENT_TYPE_NAME                72454 non-null  object \n 7   MIN_YEARS_EXPERIENCE                49352 non-null  float64\n 8   IS_INTERNSHIP                       72454 non-null  object \n 9   REMOTE_TYPE                         72454 non-null  float64\n 10  REMOTE_TYPE_NAME                    72498 non-null  object \n 11  LOCATION                            72454 non-null  object \n 12  CITY                                72454 non-null  object \n 13  CITY_NAME                           72454 non-null  object \n 14  COUNTY                              72454 non-null  float64\n 15  COUNTY_NAME                         72454 non-null  object \n 16  MSA                                 68549 non-null  float64\n 17  MSA_NAME                            68549 non-null  object \n 18  STATE                               72454 non-null  float64\n 19  STATE_NAME                          72454 non-null  object \n 20  COUNTY_OUTGOING                     72454 non-null  float64\n 21  COUNTY_NAME_OUTGOING                72454 non-null  object \n 22  COUNTY_INCOMING                     72454 non-null  float64\n 23  COUNTY_NAME_INCOMING                72454 non-null  object \n 24  MSA_OUTGOING                        68549 non-null  float64\n 25  MSA_NAME_OUTGOING                   68549 non-null  object \n 26  MSA_INCOMING                        68536 non-null  float64\n 27  MSA_NAME_INCOMING                   68536 non-null  object \n 28  NAICS2                              72454 non-null  float64\n 29  NAICS2_NAME                         72454 non-null  object \n 30  NAICS3                              72454 non-null  float64\n 31  NAICS3_NAME                         72454 non-null  object \n 32  NAICS4                              72454 non-null  float64\n 33  NAICS4_NAME                         72454 non-null  object \n 34  NAICS5                              72454 non-null  float64\n 35  NAICS5_NAME                         72454 non-null  object \n 36  NAICS6                              72454 non-null  float64\n 37  NAICS6_NAME                         72454 non-null  object \n 38  TITLE                               72454 non-null  object \n 39  TITLE_NAME                          72454 non-null  object \n 40  TITLE_CLEAN                         72358 non-null  object \n 41  SKILLS                              72454 non-null  object \n 42  SKILLS_NAME                         72454 non-null  object \n 43  SPECIALIZED_SKILLS                  72454 non-null  object \n 44  SPECIALIZED_SKILLS_NAME             72454 non-null  object \n 45  CERTIFICATIONS                      72454 non-null  object \n 46  CERTIFICATIONS_NAME                 72454 non-null  object \n 47  COMMON_SKILLS                       72454 non-null  object \n 48  COMMON_SKILLS_NAME                  72454 non-null  object \n 49  SOFTWARE_SKILLS                     72454 non-null  object \n 50  SOFTWARE_SKILLS_NAME                72454 non-null  object \n 51  ONET                                72454 non-null  object \n 52  ONET_NAME                           72454 non-null  object \n 53  ONET_2019                           72454 non-null  object \n 54  ONET_2019_NAME                      72454 non-null  object \n 55  CIP6                                72454 non-null  object \n 56  CIP6_NAME                           72454 non-null  object \n 57  CIP4                                72454 non-null  object \n 58  CIP4_NAME                           72454 non-null  object \n 59  CIP2                                72454 non-null  object \n 60  CIP2_NAME                           72454 non-null  object \n 61  SOC_2021_2                          72454 non-null  object \n 62  SOC_2021_2_NAME                     72454 non-null  object \n 63  SOC_2021_3                          72454 non-null  object \n 64  SOC_2021_3_NAME                     72454 non-null  object \n 65  SOC_2021_4                          72454 non-null  object \n 66  SOC_2021_4_NAME                     72454 non-null  object \n 67  SOC_2021_5                          72454 non-null  object \n 68  SOC_2021_5_NAME                     72454 non-null  object \n 69  LOT_CAREER_AREA                     72454 non-null  float64\n 70  LOT_CAREER_AREA_NAME                72454 non-null  object \n 71  LOT_OCCUPATION                      72454 non-null  float64\n 72  LOT_OCCUPATION_NAME                 72454 non-null  object \n 73  LOT_SPECIALIZED_OCCUPATION          72454 non-null  float64\n 74  LOT_SPECIALIZED_OCCUPATION_NAME     72454 non-null  object \n 75  LOT_OCCUPATION_GROUP                72454 non-null  float64\n 76  LOT_OCCUPATION_GROUP_NAME           72454 non-null  object \n 77  LOT_V6_SPECIALIZED_OCCUPATION       72454 non-null  float64\n 78  LOT_V6_SPECIALIZED_OCCUPATION_NAME  72454 non-null  object \n 79  LOT_V6_OCCUPATION                   72454 non-null  float64\n 80  LOT_V6_OCCUPATION_NAME              72454 non-null  object \n 81  LOT_V6_OCCUPATION_GROUP             72454 non-null  float64\n 82  LOT_V6_OCCUPATION_GROUP_NAME        72454 non-null  object \n 83  LOT_V6_CAREER_AREA                  72454 non-null  float64\n 84  LOT_V6_CAREER_AREA_NAME             72454 non-null  object \n 85  SOC_2_NAME                          72454 non-null  object \n 86  SOC_3_NAME                          72454 non-null  object \n 87  SOC_4                               72454 non-null  object \n 88  SOC_4_NAME                          72454 non-null  object \n 89  SOC_5_NAME                          72454 non-null  object \n 90  NAICS_2022_4                        72454 non-null  float64\n 91  NAICS_2022_4_NAME                   72454 non-null  object \n 92  NAICS_2022_5                        72454 non-null  float64\n 93  NAICS_2022_5_NAME                   72454 non-null  object \n 94  NAICS_2022_6                        72454 non-null  float64\n 95  NAICS_2022_6_NAME                   72454 non-null  object \ndtypes: float64(28), object(68)\nmemory usage: 53.1+ MB\n```\n:::\n:::\n\n\n##  Remove Duplicates\n\n::: {#52b942cd .cell results='hide' execution_count=8}\n``` {.python .cell-code code-fold=\"true\"}\ndf1.drop_duplicates(subset=[\"TITLE_CLEAN\", \"COMPANY_NAME\", \"CITY_NAME\", \"POSTED\"], inplace=True)\n\ndf1[\"REMOTE_TYPE_NAME\"].value_counts(dropna=False)\ndf1[\"EMPLOYMENT_TYPE_NAME\"].value_counts(dropna=False)\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\nEMPLOYMENT_TYPE_NAME\nFull-time (> 32 hours)      68493\nPart-time (Ã¢â€°Â¤ 32 hours)     2278\nPart-time / full-time         972\nNaN                            17\nName: count, dtype: int64\n```\n:::\n:::\n\n\n::: {#451bd4fb .cell results='hide' execution_count=9}\n``` {.python .cell-code code-fold=\"true\"}\n#improve\n\ndf1[\"EMPLOYMENT_TYPE_NAME\"] = df1[\"EMPLOYMENT_TYPE_NAME\"].replace({\n    \"Part-time (Ã¢â€°Â¤ 32 hours)\": \"Part-time (â‰¤ 32 hours)\",\n    \"Part-time / full-time\": \"Part-time / Full-time\"\n})\ndf1[\"EMPLOYMENT_TYPE_NAME\"] = df1[\"EMPLOYMENT_TYPE_NAME\"].fillna(\"Unknown\")\ndf1[\"EMPLOYMENT_TYPE_NAME\"].value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\nEMPLOYMENT_TYPE_NAME\nFull-time (> 32 hours)    68493\nPart-time (â‰¤ 32 hours)     2278\nPart-time / Full-time       972\nUnknown                      17\nName: count, dtype: int64\n```\n:::\n:::\n\n\n::: {#a213b341 .cell execution_count=10}\n``` {.python .cell-code code-fold=\"true\"}\n#double check\n\nimport pandas as pd\n\ncategorical_columns = [\n    \"EMPLOYMENT_TYPE_NAME\",\n    \"REMOTE_TYPE_NAME\",\n    \"COMPANY_NAME\",\n    \"STATE_NAME\",\n    \"CITY_NAME\",\n    \"MAX_EDULEVELS_NAME\"\n]\n\ntables = []\n\nfor col in categorical_columns:\n    if col in df1.columns:\n        vc = df1[col].value_counts(dropna=False).rename(\"count\").to_frame()\n        vc.index.name = col\n        tables.append(vc)\n\npd.concat(tables, keys=[t.index.name for t in tables])\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">EMPLOYMENT_TYPE_NAME</th>\n      <th>Full-time (&gt; 32 hours)</th>\n      <td>68493</td>\n    </tr>\n    <tr>\n      <th>Part-time (â‰¤ 32 hours)</th>\n      <td>2278</td>\n    </tr>\n    <tr>\n      <th>Part-time / Full-time</th>\n      <td>972</td>\n    </tr>\n    <tr>\n      <th>Unknown</th>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>REMOTE_TYPE_NAME</th>\n      <th>[None]</th>\n      <td>56017</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">CITY_NAME</th>\n      <th>Bristow, VA</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Robbins, NC</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Clarksburg, MD</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Columbia, IL</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Harahan, LA</th>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>16205 rows Ã— 1 columns</p>\n</div>\n```\n:::\n:::\n\n\n# Exploratory Data Analysis\n\n\n##   Remote Type distribution\n\n::: {#04bb908b .cell lable='Remote type distribution Graph' execution_count=11}\n``` {.python .cell-code code-fold=\"true\"}\nremote_counts = df1[\"REMOTE_TYPE_NAME\"].value_counts()\n\nplt.figure(figsize=(10,6))\nax = sns.barplot(\n    x=remote_counts.index, \n    y=remote_counts.values, \n    hue=remote_counts.index,          \n    palette=\"Set2\"                   \n)\n           \n\nplt.title(\"Distribution of Remote Work Types\", fontsize=14)\nplt.ylabel(\"Number of Job Postings\")\nplt.xlabel(\"Remote Type\")\nplt.grid(axis='y', linestyle='--', alpha=0.7)\nplt.tight_layout()\nplt.savefig(\"figureswxw/remote_type_distribution.png\", dpi=300)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Remote type distribution](data_cleaning_files/figure-html/cell-12-output-1.png){width=950 height=566 fig-align='center'}\n:::\n:::\n\n\n![](figureswxw/remote_type_distribution.png){width=100% fig-align='center'}\n\n\n\n\n\n\n##  Top 10 states by job postings\n\n::: {#dadfed70 .cell lable='Top 10 states' execution_count=12}\n``` {.python .cell-code code-fold=\"true\"}\nimport os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf1 = pd.read_csv(\"data/lightcast_job_postings.csv\")\n\ncity_counts = df1[\"CITY_NAME\"].dropna().value_counts().head(10)\n\nplt.figure(figsize=(10,5))\nsns.barplot(x=city_counts.index, y=city_counts.values, palette=\"Accent\")\nplt.title(\"Top 10 Cities by Job Postings\")\nplt.ylabel(\"Number of Job Postings\")\nplt.xlabel(\"City\")\nplt.xticks(rotation=30)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\nplt.tight_layout()\nplt.savefig(\"figureswxw/top_cities_job_postings.png\", dpi=300)\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/var/folders/4f/s815nnpx1_15rfdwxj6cwrtr0000gn/T/ipykernel_8078/1316398421.py:6: DtypeWarning: Columns (19,30) have mixed types. Specify dtype option on import or set low_memory=False.\n  df1 = pd.read_csv(\"data/lightcast_job_postings.csv\")\n/var/folders/4f/s815nnpx1_15rfdwxj6cwrtr0000gn/T/ipykernel_8078/1316398421.py:11: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=city_counts.index, y=city_counts.values, palette=\"Accent\")\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![Remote type distribution](data_cleaning_files/figure-html/cell-13-output-2.png){width=944 height=470 fig-align='center'}\n:::\n:::\n\n\n![](figureswxw/top_cities_job_postings.png){width=100% fig-align='center'}\n\n",
    "supporting": [
      "data_cleaning_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}