[
  {
    "objectID": "ml_methods.html",
    "href": "ml_methods.html",
    "title": "ML Methods",
    "section": "",
    "text": "ML Methods\nThis page describes the machine learning methods applied to analyze the job market data.\nContent will be added here."
  },
  {
    "objectID": "data_cleaning.html",
    "href": "data_cleaning.html",
    "title": "Data Cleaning",
    "section": "",
    "text": "This page provides an overview of the data cleaning and initial exploration process for the job market dataset.\nContent will be added here.\n\n\n\n\nCode\nimport pandas as pd\ndf1 = pd.read_csv(\"./data/lightcast_job_postings.csv\")\n\n\n/var/folders/4f/s815nnpx1_15rfdwxj6cwrtr0000gn/T/ipykernel_5616/3038307670.py:2: DtypeWarning: Columns (19,30) have mixed types. Specify dtype option on import or set low_memory=False.\n  df1 = pd.read_csv(\"./data/lightcast_job_postings.csv\")\n\n\n\n\nCode\ndf1.head()\ndf1.info()\ndf1.describe()\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 72498 entries, 0 to 72497\nColumns: 131 entries, ID to NAICS_2022_6_NAME\ndtypes: float64(38), object(93)\nmemory usage: 72.5+ MB\n\n\n\n\n\n\n\n\n\nDUPLICATES\nDURATION\nMODELED_DURATION\nCOMPANY\nMIN_EDULEVELS\nMAX_EDULEVELS\nEMPLOYMENT_TYPE\nMIN_YEARS_EXPERIENCE\nMAX_YEARS_EXPERIENCE\nSALARY\n...\nLOT_OCCUPATION_GROUP\nLOT_V6_SPECIALIZED_OCCUPATION\nLOT_V6_OCCUPATION\nLOT_V6_OCCUPATION_GROUP\nLOT_V6_CAREER_AREA\nNAICS_2022_2\nNAICS_2022_3\nNAICS_2022_4\nNAICS_2022_5\nNAICS_2022_6\n\n\n\n\ncount\n72476.000000\n45182.000000\n53208.000000\n7.245400e+04\n72454.000000\n16315.000000\n72454.000000\n49352.000000\n8430.000000\n30808.000000\n...\n72454.000000\n7.245400e+04\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n\n\nmean\n1.081627\n22.322695\n19.737615\n3.702704e+07\n31.482527\n2.833834\n1.058768\n5.486444\n3.773903\n117953.755031\n...\n2239.204475\n2.239318e+07\n223931.694096\n2239.204475\n22.281158\n58.352555\n587.864590\n5883.121995\n58834.317125\n588345.683937\n\n\nstd\n2.807512\n14.359085\n12.963769\n3.015089e+07\n44.747433\n0.584028\n0.286997\n3.322241\n2.576739\n45133.878359\n...\n285.424309\n2.854275e+06\n28542.747473\n285.424309\n2.854360\n18.626415\n186.259064\n1864.093904\n18642.971892\n186431.744508\n\n\nmin\n0.000000\n0.000000\n0.000000\n0.000000e+00\n0.000000\n1.000000\n1.000000\n0.000000\n0.000000\n15860.000000\n...\n1111.000000\n1.111101e+07\n111110.000000\n1111.000000\n11.000000\n11.000000\n111.000000\n1111.000000\n11115.000000\n111150.000000\n\n\n25%\n0.000000\n11.000000\n10.000000\n6.505993e+06\n2.000000\n3.000000\n1.000000\n3.000000\n2.000000\n84928.500000\n...\n2310.000000\n2.310101e+07\n231010.000000\n2310.000000\n23.000000\n52.000000\n522.000000\n5223.000000\n52232.000000\n522320.000000\n\n\n50%\n0.000000\n18.000000\n16.000000\n3.761516e+07\n2.000000\n3.000000\n1.000000\n5.000000\n3.000000\n116300.000000\n...\n2311.000000\n2.311131e+07\n231113.000000\n2311.000000\n23.000000\n54.000000\n541.000000\n5415.000000\n54151.000000\n541519.000000\n\n\n75%\n1.000000\n32.000000\n28.000000\n4.330689e+07\n99.000000\n3.000000\n1.000000\n8.000000\n5.000000\n145600.000000\n...\n2311.000000\n2.311131e+07\n231113.000000\n2311.000000\n23.000000\n56.000000\n561.000000\n5614.000000\n56149.000000\n561499.000000\n\n\nmax\n100.000000\n59.000000\n59.000000\n1.082365e+08\n99.000000\n4.000000\n3.000000\n15.000000\n14.000000\n500000.000000\n...\n2712.000000\n2.712111e+07\n271211.000000\n2712.000000\n27.000000\n99.000000\n999.000000\n9999.000000\n99999.000000\n999999.000000\n\n\n\n\n8 rows × 38 columns\n\n\n\n\n\n\n\n\nCode\ndf1.columns.tolist()\nprint(df1.columns.tolist())\n\n\n['ID', 'LAST_UPDATED_DATE', 'LAST_UPDATED_TIMESTAMP', 'DUPLICATES', 'POSTED', 'EXPIRED', 'DURATION', 'SOURCE_TYPES', 'SOURCES', 'URL', 'ACTIVE_URLS', 'ACTIVE_SOURCES_INFO', 'TITLE_RAW', 'BODY', 'MODELED_EXPIRED', 'MODELED_DURATION', 'COMPANY', 'COMPANY_NAME', 'COMPANY_RAW', 'COMPANY_IS_STAFFING', 'EDUCATION_LEVELS', 'EDUCATION_LEVELS_NAME', 'MIN_EDULEVELS', 'MIN_EDULEVELS_NAME', 'MAX_EDULEVELS', 'MAX_EDULEVELS_NAME', 'EMPLOYMENT_TYPE', 'EMPLOYMENT_TYPE_NAME', 'MIN_YEARS_EXPERIENCE', 'MAX_YEARS_EXPERIENCE', 'IS_INTERNSHIP', 'SALARY', 'REMOTE_TYPE', 'REMOTE_TYPE_NAME', 'ORIGINAL_PAY_PERIOD', 'SALARY_TO', 'SALARY_FROM', 'LOCATION', 'CITY', 'CITY_NAME', 'COUNTY', 'COUNTY_NAME', 'MSA', 'MSA_NAME', 'STATE', 'STATE_NAME', 'COUNTY_OUTGOING', 'COUNTY_NAME_OUTGOING', 'COUNTY_INCOMING', 'COUNTY_NAME_INCOMING', 'MSA_OUTGOING', 'MSA_NAME_OUTGOING', 'MSA_INCOMING', 'MSA_NAME_INCOMING', 'NAICS2', 'NAICS2_NAME', 'NAICS3', 'NAICS3_NAME', 'NAICS4', 'NAICS4_NAME', 'NAICS5', 'NAICS5_NAME', 'NAICS6', 'NAICS6_NAME', 'TITLE', 'TITLE_NAME', 'TITLE_CLEAN', 'SKILLS', 'SKILLS_NAME', 'SPECIALIZED_SKILLS', 'SPECIALIZED_SKILLS_NAME', 'CERTIFICATIONS', 'CERTIFICATIONS_NAME', 'COMMON_SKILLS', 'COMMON_SKILLS_NAME', 'SOFTWARE_SKILLS', 'SOFTWARE_SKILLS_NAME', 'ONET', 'ONET_NAME', 'ONET_2019', 'ONET_2019_NAME', 'CIP6', 'CIP6_NAME', 'CIP4', 'CIP4_NAME', 'CIP2', 'CIP2_NAME', 'SOC_2021_2', 'SOC_2021_2_NAME', 'SOC_2021_3', 'SOC_2021_3_NAME', 'SOC_2021_4', 'SOC_2021_4_NAME', 'SOC_2021_5', 'SOC_2021_5_NAME', 'LOT_CAREER_AREA', 'LOT_CAREER_AREA_NAME', 'LOT_OCCUPATION', 'LOT_OCCUPATION_NAME', 'LOT_SPECIALIZED_OCCUPATION', 'LOT_SPECIALIZED_OCCUPATION_NAME', 'LOT_OCCUPATION_GROUP', 'LOT_OCCUPATION_GROUP_NAME', 'LOT_V6_SPECIALIZED_OCCUPATION', 'LOT_V6_SPECIALIZED_OCCUPATION_NAME', 'LOT_V6_OCCUPATION', 'LOT_V6_OCCUPATION_NAME', 'LOT_V6_OCCUPATION_GROUP', 'LOT_V6_OCCUPATION_GROUP_NAME', 'LOT_V6_CAREER_AREA', 'LOT_V6_CAREER_AREA_NAME', 'SOC_2', 'SOC_2_NAME', 'SOC_3', 'SOC_3_NAME', 'SOC_4', 'SOC_4_NAME', 'SOC_5', 'SOC_5_NAME', 'LIGHTCAST_SECTORS', 'LIGHTCAST_SECTORS_NAME', 'NAICS_2022_2', 'NAICS_2022_2_NAME', 'NAICS_2022_3', 'NAICS_2022_3_NAME', 'NAICS_2022_4', 'NAICS_2022_4_NAME', 'NAICS_2022_5', 'NAICS_2022_5_NAME', 'NAICS_2022_6', 'NAICS_2022_6_NAME']\n\n\n\n\n\n\n\nCode\n# Define columns that are irrelevant or redundant for our analysis\ncolumns_to_drop = [\n    # Tracking and metadata\n    \"ID\", \"LAST_UPDATED_DATE\", \"LAST_UPDATED_TIMESTAMP\", \"DUPLICATES\",\n    \"URL\", \"ACTIVE_URLS\", \"ACTIVE_SOURCES_INFO\", \"SOURCE_TYPES\", \"SOURCES\",\n\n    # Company raw info\n    \"COMPANY_RAW\", \"COMPANY_IS_STAFFING\",\n\n    # Raw or text-heavy fields\n    \"TITLE_RAW\", \"BODY\",\n\n    # Modeled / derived fields\n    \"MODELED_EXPIRED\", \"MODELED_DURATION\",\n\n    # Educational levels (redundant versions)\n    \"EDUCATION_LEVELS\", \"EDUCATION_LEVELS_NAME\",\n    \"MIN_EDULEVELS\", \"MIN_EDULEVELS_NAME\", \"MAX_EDULEVELS\",\n\n    # Redundant NAICS / SOC codes\n    \"NAICS_2022_2\", \"NAICS_2022_2_NAME\",\n    \"NAICS_2022_3\", \"NAICS_2022_3_NAME\",\n    \"SOC_2\", \"SOC_3\", \"SOC_5\"\n]\n\n# Drop columns, ignore if a column is missing\ndf1.drop(columns=columns_to_drop, inplace=True, errors=\"ignore\")\n\n# Display the first few rows to confirm\ndf1.head()\n\n\n\n\n\n\n\n\n\nPOSTED\nEXPIRED\nDURATION\nCOMPANY\nCOMPANY_NAME\nMAX_EDULEVELS_NAME\nEMPLOYMENT_TYPE\nEMPLOYMENT_TYPE_NAME\nMIN_YEARS_EXPERIENCE\nMAX_YEARS_EXPERIENCE\n...\nSOC_4_NAME\nSOC_5_NAME\nLIGHTCAST_SECTORS\nLIGHTCAST_SECTORS_NAME\nNAICS_2022_4\nNAICS_2022_4_NAME\nNAICS_2022_5\nNAICS_2022_5_NAME\nNAICS_2022_6\nNAICS_2022_6_NAME\n\n\n\n\n0\n6/2/2024\n6/8/2024\n6.0\n894731.0\nMurphy USA\nNaN\n1.0\nFull-time (&gt; 32 hours)\n2.0\n2.0\n...\nData Scientists\nData Scientists\n[\\n 7\\n]\n[\\n \"Artificial Intelligence\"\\n]\n4413.0\nAutomotive Parts, Accessories, and Tire Retailers\n44133.0\nAutomotive Parts and Accessories Retailers\n441330.0\nAutomotive Parts and Accessories Retailers\n\n\n1\n6/2/2024\n8/1/2024\nNaN\n133098.0\nSmx Corporation Limited\nNaN\n1.0\nFull-time (&gt; 32 hours)\n3.0\n3.0\n...\nData Scientists\nData Scientists\nNaN\nNaN\n5613.0\nEmployment Services\n56132.0\nTemporary Help Services\n561320.0\nTemporary Help Services\n\n\n2\n6/2/2024\n7/7/2024\n35.0\n39063746.0\nSedgwick\nNaN\n1.0\nFull-time (&gt; 32 hours)\n5.0\nNaN\n...\nData Scientists\nData Scientists\nNaN\nNaN\n5242.0\nAgencies, Brokerages, and Other Insurance Rela...\n52429.0\nOther Insurance Related Activities\n524291.0\nClaims Adjusting\n\n\n3\n6/2/2024\n7/20/2024\n48.0\n37615159.0\nWells Fargo\nNaN\n1.0\nFull-time (&gt; 32 hours)\n3.0\nNaN\n...\nData Scientists\nData Scientists\n[\\n 6\\n]\n[\\n \"Data Privacy/Protection\"\\n]\n5221.0\nDepository Credit Intermediation\n52211.0\nCommercial Banking\n522110.0\nCommercial Banking\n\n\n4\n6/2/2024\n6/17/2024\n15.0\n0.0\nUnclassified\nNaN\n3.0\nPart-time / full-time\nNaN\nNaN\n...\nData Scientists\nData Scientists\nNaN\nNaN\n9999.0\nUnclassified Industry\n99999.0\nUnclassified Industry\n999999.0\nUnclassified Industry\n\n\n\n\n5 rows × 104 columns\n\n\n\n\n\n\n\n\nCode\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nos.makedirs(\"figureswxw\", exist_ok=True)\n\n\n::: {#cell-Missing Value Heatmap .cell execution_count=6}\n\nCode\nimport missingno as msno\nimport matplotlib.pyplot as plt\nmsno.heatmap(df1)\n\nplt.title(\"Missing Values Heatmap\")\nplt.tight_layout()\nplt.savefig(\"figureswxw/missing_values_heatmap.png\", dpi=300)\nplt.show()\n\n\n\n\n\nMissing values in the dataset\n\n\n\n:::\n\n\n\n\n\n\n\nCode\n# Drop columns with &gt;50% missing values\ndf1.dropna(axis=1, thresh=len(df1) * 0.5, inplace=True)\n\n\nif \"SALARY\" in df1.columns:\n    df1[\"SALARY\"] = df1[\"SALARY\"].fillna(df1[\"SALARY\"].median())\n\n    df1[\"DURATION\"] = df1[\"DURATION\"].fillna(df1[\"DURATION\"].median())\n\ncategorical_columns = [\"REMOTE_TYPE_NAME\", \"COMPANY_NAME\", \"MAX_EDULEVELS_NAME\"]\n\nfor col in categorical_columns:\n    if col in df1.columns:\n        df1[col] = df1[col].fillna(\"Unknown\")\n\n\ndf1.info()\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 72498 entries, 0 to 72497\nData columns (total 96 columns):\n #   Column                              Non-Null Count  Dtype  \n---  ------                              --------------  -----  \n 0   POSTED                              72476 non-null  object \n 1   EXPIRED                             64654 non-null  object \n 2   DURATION                            45182 non-null  float64\n 3   COMPANY                             72454 non-null  float64\n 4   COMPANY_NAME                        72498 non-null  object \n 5   EMPLOYMENT_TYPE                     72454 non-null  float64\n 6   EMPLOYMENT_TYPE_NAME                72454 non-null  object \n 7   MIN_YEARS_EXPERIENCE                49352 non-null  float64\n 8   IS_INTERNSHIP                       72454 non-null  object \n 9   REMOTE_TYPE                         72454 non-null  float64\n 10  REMOTE_TYPE_NAME                    72498 non-null  object \n 11  LOCATION                            72454 non-null  object \n 12  CITY                                72454 non-null  object \n 13  CITY_NAME                           72454 non-null  object \n 14  COUNTY                              72454 non-null  float64\n 15  COUNTY_NAME                         72454 non-null  object \n 16  MSA                                 68549 non-null  float64\n 17  MSA_NAME                            68549 non-null  object \n 18  STATE                               72454 non-null  float64\n 19  STATE_NAME                          72454 non-null  object \n 20  COUNTY_OUTGOING                     72454 non-null  float64\n 21  COUNTY_NAME_OUTGOING                72454 non-null  object \n 22  COUNTY_INCOMING                     72454 non-null  float64\n 23  COUNTY_NAME_INCOMING                72454 non-null  object \n 24  MSA_OUTGOING                        68549 non-null  float64\n 25  MSA_NAME_OUTGOING                   68549 non-null  object \n 26  MSA_INCOMING                        68536 non-null  float64\n 27  MSA_NAME_INCOMING                   68536 non-null  object \n 28  NAICS2                              72454 non-null  float64\n 29  NAICS2_NAME                         72454 non-null  object \n 30  NAICS3                              72454 non-null  float64\n 31  NAICS3_NAME                         72454 non-null  object \n 32  NAICS4                              72454 non-null  float64\n 33  NAICS4_NAME                         72454 non-null  object \n 34  NAICS5                              72454 non-null  float64\n 35  NAICS5_NAME                         72454 non-null  object \n 36  NAICS6                              72454 non-null  float64\n 37  NAICS6_NAME                         72454 non-null  object \n 38  TITLE                               72454 non-null  object \n 39  TITLE_NAME                          72454 non-null  object \n 40  TITLE_CLEAN                         72358 non-null  object \n 41  SKILLS                              72454 non-null  object \n 42  SKILLS_NAME                         72454 non-null  object \n 43  SPECIALIZED_SKILLS                  72454 non-null  object \n 44  SPECIALIZED_SKILLS_NAME             72454 non-null  object \n 45  CERTIFICATIONS                      72454 non-null  object \n 46  CERTIFICATIONS_NAME                 72454 non-null  object \n 47  COMMON_SKILLS                       72454 non-null  object \n 48  COMMON_SKILLS_NAME                  72454 non-null  object \n 49  SOFTWARE_SKILLS                     72454 non-null  object \n 50  SOFTWARE_SKILLS_NAME                72454 non-null  object \n 51  ONET                                72454 non-null  object \n 52  ONET_NAME                           72454 non-null  object \n 53  ONET_2019                           72454 non-null  object \n 54  ONET_2019_NAME                      72454 non-null  object \n 55  CIP6                                72454 non-null  object \n 56  CIP6_NAME                           72454 non-null  object \n 57  CIP4                                72454 non-null  object \n 58  CIP4_NAME                           72454 non-null  object \n 59  CIP2                                72454 non-null  object \n 60  CIP2_NAME                           72454 non-null  object \n 61  SOC_2021_2                          72454 non-null  object \n 62  SOC_2021_2_NAME                     72454 non-null  object \n 63  SOC_2021_3                          72454 non-null  object \n 64  SOC_2021_3_NAME                     72454 non-null  object \n 65  SOC_2021_4                          72454 non-null  object \n 66  SOC_2021_4_NAME                     72454 non-null  object \n 67  SOC_2021_5                          72454 non-null  object \n 68  SOC_2021_5_NAME                     72454 non-null  object \n 69  LOT_CAREER_AREA                     72454 non-null  float64\n 70  LOT_CAREER_AREA_NAME                72454 non-null  object \n 71  LOT_OCCUPATION                      72454 non-null  float64\n 72  LOT_OCCUPATION_NAME                 72454 non-null  object \n 73  LOT_SPECIALIZED_OCCUPATION          72454 non-null  float64\n 74  LOT_SPECIALIZED_OCCUPATION_NAME     72454 non-null  object \n 75  LOT_OCCUPATION_GROUP                72454 non-null  float64\n 76  LOT_OCCUPATION_GROUP_NAME           72454 non-null  object \n 77  LOT_V6_SPECIALIZED_OCCUPATION       72454 non-null  float64\n 78  LOT_V6_SPECIALIZED_OCCUPATION_NAME  72454 non-null  object \n 79  LOT_V6_OCCUPATION                   72454 non-null  float64\n 80  LOT_V6_OCCUPATION_NAME              72454 non-null  object \n 81  LOT_V6_OCCUPATION_GROUP             72454 non-null  float64\n 82  LOT_V6_OCCUPATION_GROUP_NAME        72454 non-null  object \n 83  LOT_V6_CAREER_AREA                  72454 non-null  float64\n 84  LOT_V6_CAREER_AREA_NAME             72454 non-null  object \n 85  SOC_2_NAME                          72454 non-null  object \n 86  SOC_3_NAME                          72454 non-null  object \n 87  SOC_4                               72454 non-null  object \n 88  SOC_4_NAME                          72454 non-null  object \n 89  SOC_5_NAME                          72454 non-null  object \n 90  NAICS_2022_4                        72454 non-null  float64\n 91  NAICS_2022_4_NAME                   72454 non-null  object \n 92  NAICS_2022_5                        72454 non-null  float64\n 93  NAICS_2022_5_NAME                   72454 non-null  object \n 94  NAICS_2022_6                        72454 non-null  float64\n 95  NAICS_2022_6_NAME                   72454 non-null  object \ndtypes: float64(28), object(68)\nmemory usage: 53.1+ MB\n\n\n\n\n\n\n\nCode\ndf1.drop_duplicates(subset=[\"TITLE_CLEAN\", \"COMPANY_NAME\", \"CITY_NAME\", \"POSTED\"], inplace=True)\n\ndf1[\"REMOTE_TYPE_NAME\"].value_counts(dropna=False)\ndf1[\"EMPLOYMENT_TYPE_NAME\"].value_counts(dropna=False)\n\n\nEMPLOYMENT_TYPE_NAME\nFull-time (&gt; 32 hours)      68493\nPart-time (â‰¤ 32 hours)     2278\nPart-time / full-time         972\nNaN                            17\nName: count, dtype: int64\n\n\n\n\nCode\n#improve\n\ndf1[\"EMPLOYMENT_TYPE_NAME\"] = df1[\"EMPLOYMENT_TYPE_NAME\"].replace({\n    \"Part-time (â‰¤ 32 hours)\": \"Part-time (≤ 32 hours)\",\n    \"Part-time / full-time\": \"Part-time / Full-time\"\n})\ndf1[\"EMPLOYMENT_TYPE_NAME\"] = df1[\"EMPLOYMENT_TYPE_NAME\"].fillna(\"Unknown\")\ndf1[\"EMPLOYMENT_TYPE_NAME\"].value_counts()\n\n\nEMPLOYMENT_TYPE_NAME\nFull-time (&gt; 32 hours)    68493\nPart-time (≤ 32 hours)     2278\nPart-time / Full-time       972\nUnknown                      17\nName: count, dtype: int64\n\n\n\n\nCode\n#double check\n\ncategorical_columns = [\n    \"EMPLOYMENT_TYPE_NAME\",\n    \"REMOTE_TYPE_NAME\",\n    \"COMPANY_NAME\",\n    \"STATE_NAME\",\n    \"CITY_NAME\",\n    \"MAX_EDULEVELS_NAME\"\n]\n\nfor col in categorical_columns:\n    if col in df1.columns:\n        print(f\"Unique values in {col}:\")\n        print(df1[col].value_counts(dropna=False))\n        print(\"-\" * 40)\n\n\nUnique values in EMPLOYMENT_TYPE_NAME:\nEMPLOYMENT_TYPE_NAME\nFull-time (&gt; 32 hours)    68493\nPart-time (≤ 32 hours)     2278\nPart-time / Full-time       972\nUnknown                      17\nName: count, dtype: int64\n----------------------------------------\nUnique values in REMOTE_TYPE_NAME:\nREMOTE_TYPE_NAME\n[None]           56017\nRemote           12376\nHybrid Remote     2237\nNot Remote        1113\nUnknown             17\nName: count, dtype: int64\n----------------------------------------\nUnique values in COMPANY_NAME:\nCOMPANY_NAME\nUnclassified                              3930\nDeloitte                                  2553\nAccenture                                 1498\nPricewaterhouseCoopers                     839\nKPMG                                       451\n                                          ... \nNative American Technology Corporation       1\nStonehill College                            1\nKyrene School District                       1\nBracco Diagnostics                           1\nKobie Properties Limited                     1\nName: count, Length: 12302, dtype: int64\n----------------------------------------\nUnique values in STATE_NAME:\nSTATE_NAME\nTexas                                      7999\nCalifornia                                 7005\nFlorida                                    3609\nVirginia                                   3597\nIllinois                                   3504\nNew York                                   3277\nNorth Carolina                             2719\nGeorgia                                    2634\nOhio                                       2606\nNew Jersey                                 2583\nPennsylvania                               2245\nMassachusetts                              2040\nMichigan                                   1824\nArizona                                    1630\nWashington                                 1605\nMinnesota                                  1466\nColorado                                   1442\nMaryland                                   1345\nTennessee                                  1267\nMissouri                                   1217\nWashington, D.C. (District of Columbia)    1208\nOregon                                     1084\nWisconsin                                  1042\nIndiana                                     950\nConnecticut                                 849\nKansas                                      732\nAlabama                                     682\nSouth Carolina                              637\nUtah                                        634\nKentucky                                    630\nIowa                                        619\nOklahoma                                    603\nNevada                                      585\nArkansas                                    584\nNebraska                                    536\nIdaho                                       474\nMississippi                                 469\nLouisiana                                   451\nRhode Island                                438\nDelaware                                    436\nMaine                                       345\nNew Hampshire                               290\nSouth Dakota                                285\nHawaii                                      258\nNew Mexico                                  252\nAlaska                                      229\nVermont                                     227\nMontana                                     185\nWest Virginia                               159\nNorth Dakota                                148\nWyoming                                     108\nNaN                                          17\nName: count, dtype: int64\n----------------------------------------\nUnique values in CITY_NAME:\nCITY_NAME\nNew York, NY      2122\nChicago, IL       1782\nAtlanta, GA       1688\nAustin, TX        1457\nHouston, TX       1413\n                  ... \nBristow, VA          1\nRobbins, NC          1\nClarksburg, MD       1\nColumbia, IL         1\nHarahan, LA          1\nName: count, Length: 3842, dtype: int64\n----------------------------------------"
  },
  {
    "objectID": "data_cleaning.html#lode-dataset",
    "href": "data_cleaning.html#lode-dataset",
    "title": "Data Cleaning",
    "section": "",
    "text": "/var/folders/4f/s815nnpx1_15rfdwxj6cwrtr0000gn/T/ipykernel_92605/3038307670.py:2: DtypeWarning: Columns (19,30) have mixed types. Specify dtype option on import or set low_memory=False.\n  df1 = pd.read_csv(\"./data/lightcast_job_postings.csv\")\n\n\n\ndf1.head()\ndf1.info()\ndf1.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 72498 entries, 0 to 72497\nColumns: 131 entries, ID to NAICS_2022_6_NAME\ndtypes: float64(38), object(93)\nmemory usage: 72.5+ MB\n\n\n\n\n\n\n\n\n\nDUPLICATES\nDURATION\nMODELED_DURATION\nCOMPANY\nMIN_EDULEVELS\nMAX_EDULEVELS\nEMPLOYMENT_TYPE\nMIN_YEARS_EXPERIENCE\nMAX_YEARS_EXPERIENCE\nSALARY\n...\nLOT_OCCUPATION_GROUP\nLOT_V6_SPECIALIZED_OCCUPATION\nLOT_V6_OCCUPATION\nLOT_V6_OCCUPATION_GROUP\nLOT_V6_CAREER_AREA\nNAICS_2022_2\nNAICS_2022_3\nNAICS_2022_4\nNAICS_2022_5\nNAICS_2022_6\n\n\n\n\ncount\n72476.000000\n45182.000000\n53208.000000\n7.245400e+04\n72454.000000\n16315.000000\n72454.000000\n49352.000000\n8430.000000\n30808.000000\n...\n72454.000000\n7.245400e+04\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n\n\nmean\n1.081627\n22.322695\n19.737615\n3.702704e+07\n31.482527\n2.833834\n1.058768\n5.486444\n3.773903\n117953.755031\n...\n2239.204475\n2.239318e+07\n223931.694096\n2239.204475\n22.281158\n58.352555\n587.864590\n5883.121995\n58834.317125\n588345.683937\n\n\nstd\n2.807512\n14.359085\n12.963769\n3.015089e+07\n44.747433\n0.584028\n0.286997\n3.322241\n2.576739\n45133.878359\n...\n285.424309\n2.854275e+06\n28542.747473\n285.424309\n2.854360\n18.626415\n186.259064\n1864.093904\n18642.971892\n186431.744508\n\n\nmin\n0.000000\n0.000000\n0.000000\n0.000000e+00\n0.000000\n1.000000\n1.000000\n0.000000\n0.000000\n15860.000000\n...\n1111.000000\n1.111101e+07\n111110.000000\n1111.000000\n11.000000\n11.000000\n111.000000\n1111.000000\n11115.000000\n111150.000000\n\n\n25%\n0.000000\n11.000000\n10.000000\n6.505993e+06\n2.000000\n3.000000\n1.000000\n3.000000\n2.000000\n84928.500000\n...\n2310.000000\n2.310101e+07\n231010.000000\n2310.000000\n23.000000\n52.000000\n522.000000\n5223.000000\n52232.000000\n522320.000000\n\n\n50%\n0.000000\n18.000000\n16.000000\n3.761516e+07\n2.000000\n3.000000\n1.000000\n5.000000\n3.000000\n116300.000000\n...\n2311.000000\n2.311131e+07\n231113.000000\n2311.000000\n23.000000\n54.000000\n541.000000\n5415.000000\n54151.000000\n541519.000000\n\n\n75%\n1.000000\n32.000000\n28.000000\n4.330689e+07\n99.000000\n3.000000\n1.000000\n8.000000\n5.000000\n145600.000000\n...\n2311.000000\n2.311131e+07\n231113.000000\n2311.000000\n23.000000\n56.000000\n561.000000\n5614.000000\n56149.000000\n561499.000000\n\n\nmax\n100.000000\n59.000000\n59.000000\n1.082365e+08\n99.000000\n4.000000\n3.000000\n15.000000\n14.000000\n500000.000000\n...\n2712.000000\n2.712111e+07\n271211.000000\n2712.000000\n27.000000\n99.000000\n999.000000\n9999.000000\n99999.000000\n999999.000000\n\n\n\n\n8 rows × 38 columns"
  },
  {
    "objectID": "data_cleaning.html#check-columns-information",
    "href": "data_cleaning.html#check-columns-information",
    "title": "Data Cleaning",
    "section": "",
    "text": "Code\ndf1.columns.tolist()\nprint(df1.columns.tolist())\n\n\n['ID', 'LAST_UPDATED_DATE', 'LAST_UPDATED_TIMESTAMP', 'DUPLICATES', 'POSTED', 'EXPIRED', 'DURATION', 'SOURCE_TYPES', 'SOURCES', 'URL', 'ACTIVE_URLS', 'ACTIVE_SOURCES_INFO', 'TITLE_RAW', 'BODY', 'MODELED_EXPIRED', 'MODELED_DURATION', 'COMPANY', 'COMPANY_NAME', 'COMPANY_RAW', 'COMPANY_IS_STAFFING', 'EDUCATION_LEVELS', 'EDUCATION_LEVELS_NAME', 'MIN_EDULEVELS', 'MIN_EDULEVELS_NAME', 'MAX_EDULEVELS', 'MAX_EDULEVELS_NAME', 'EMPLOYMENT_TYPE', 'EMPLOYMENT_TYPE_NAME', 'MIN_YEARS_EXPERIENCE', 'MAX_YEARS_EXPERIENCE', 'IS_INTERNSHIP', 'SALARY', 'REMOTE_TYPE', 'REMOTE_TYPE_NAME', 'ORIGINAL_PAY_PERIOD', 'SALARY_TO', 'SALARY_FROM', 'LOCATION', 'CITY', 'CITY_NAME', 'COUNTY', 'COUNTY_NAME', 'MSA', 'MSA_NAME', 'STATE', 'STATE_NAME', 'COUNTY_OUTGOING', 'COUNTY_NAME_OUTGOING', 'COUNTY_INCOMING', 'COUNTY_NAME_INCOMING', 'MSA_OUTGOING', 'MSA_NAME_OUTGOING', 'MSA_INCOMING', 'MSA_NAME_INCOMING', 'NAICS2', 'NAICS2_NAME', 'NAICS3', 'NAICS3_NAME', 'NAICS4', 'NAICS4_NAME', 'NAICS5', 'NAICS5_NAME', 'NAICS6', 'NAICS6_NAME', 'TITLE', 'TITLE_NAME', 'TITLE_CLEAN', 'SKILLS', 'SKILLS_NAME', 'SPECIALIZED_SKILLS', 'SPECIALIZED_SKILLS_NAME', 'CERTIFICATIONS', 'CERTIFICATIONS_NAME', 'COMMON_SKILLS', 'COMMON_SKILLS_NAME', 'SOFTWARE_SKILLS', 'SOFTWARE_SKILLS_NAME', 'ONET', 'ONET_NAME', 'ONET_2019', 'ONET_2019_NAME', 'CIP6', 'CIP6_NAME', 'CIP4', 'CIP4_NAME', 'CIP2', 'CIP2_NAME', 'SOC_2021_2', 'SOC_2021_2_NAME', 'SOC_2021_3', 'SOC_2021_3_NAME', 'SOC_2021_4', 'SOC_2021_4_NAME', 'SOC_2021_5', 'SOC_2021_5_NAME', 'LOT_CAREER_AREA', 'LOT_CAREER_AREA_NAME', 'LOT_OCCUPATION', 'LOT_OCCUPATION_NAME', 'LOT_SPECIALIZED_OCCUPATION', 'LOT_SPECIALIZED_OCCUPATION_NAME', 'LOT_OCCUPATION_GROUP', 'LOT_OCCUPATION_GROUP_NAME', 'LOT_V6_SPECIALIZED_OCCUPATION', 'LOT_V6_SPECIALIZED_OCCUPATION_NAME', 'LOT_V6_OCCUPATION', 'LOT_V6_OCCUPATION_NAME', 'LOT_V6_OCCUPATION_GROUP', 'LOT_V6_OCCUPATION_GROUP_NAME', 'LOT_V6_CAREER_AREA', 'LOT_V6_CAREER_AREA_NAME', 'SOC_2', 'SOC_2_NAME', 'SOC_3', 'SOC_3_NAME', 'SOC_4', 'SOC_4_NAME', 'SOC_5', 'SOC_5_NAME', 'LIGHTCAST_SECTORS', 'LIGHTCAST_SECTORS_NAME', 'NAICS_2022_2', 'NAICS_2022_2_NAME', 'NAICS_2022_3', 'NAICS_2022_3_NAME', 'NAICS_2022_4', 'NAICS_2022_4_NAME', 'NAICS_2022_5', 'NAICS_2022_5_NAME', 'NAICS_2022_6', 'NAICS_2022_6_NAME']"
  },
  {
    "objectID": "data_cleaning.html#dropping-unnecessary-columns",
    "href": "data_cleaning.html#dropping-unnecessary-columns",
    "title": "Data Cleaning",
    "section": "",
    "text": "Code\n# Define columns that are irrelevant or redundant for our analysis\ncolumns_to_drop = [\n    # Tracking and metadata\n    \"ID\", \"LAST_UPDATED_DATE\", \"LAST_UPDATED_TIMESTAMP\", \"DUPLICATES\",\n    \"URL\", \"ACTIVE_URLS\", \"ACTIVE_SOURCES_INFO\", \"SOURCE_TYPES\", \"SOURCES\",\n\n    # Company raw info\n    \"COMPANY_RAW\", \"COMPANY_IS_STAFFING\",\n\n    # Raw or text-heavy fields\n    \"TITLE_RAW\", \"BODY\",\n\n    # Modeled / derived fields\n    \"MODELED_EXPIRED\", \"MODELED_DURATION\",\n\n    # Educational levels (redundant versions)\n    \"EDUCATION_LEVELS\", \"EDUCATION_LEVELS_NAME\",\n    \"MIN_EDULEVELS\", \"MIN_EDULEVELS_NAME\", \"MAX_EDULEVELS\",\n\n    # Redundant NAICS / SOC codes\n    \"NAICS_2022_2\", \"NAICS_2022_2_NAME\",\n    \"NAICS_2022_3\", \"NAICS_2022_3_NAME\",\n    \"SOC_2\", \"SOC_3\", \"SOC_5\"\n]\n\n# Drop columns, ignore if a column is missing\ndf1.drop(columns=columns_to_drop, inplace=True, errors=\"ignore\")\n\n# Display the first few rows to confirm\ndf1.head()\n\n\n\n\n\n\n\n\n\nPOSTED\nEXPIRED\nDURATION\nCOMPANY\nCOMPANY_NAME\nMAX_EDULEVELS_NAME\nEMPLOYMENT_TYPE\nEMPLOYMENT_TYPE_NAME\nMIN_YEARS_EXPERIENCE\nMAX_YEARS_EXPERIENCE\n...\nSOC_4_NAME\nSOC_5_NAME\nLIGHTCAST_SECTORS\nLIGHTCAST_SECTORS_NAME\nNAICS_2022_4\nNAICS_2022_4_NAME\nNAICS_2022_5\nNAICS_2022_5_NAME\nNAICS_2022_6\nNAICS_2022_6_NAME\n\n\n\n\n0\n6/2/2024\n6/8/2024\n6.0\n894731.0\nMurphy USA\nNaN\n1.0\nFull-time (&gt; 32 hours)\n2.0\n2.0\n...\nData Scientists\nData Scientists\n[\\n 7\\n]\n[\\n \"Artificial Intelligence\"\\n]\n4413.0\nAutomotive Parts, Accessories, and Tire Retailers\n44133.0\nAutomotive Parts and Accessories Retailers\n441330.0\nAutomotive Parts and Accessories Retailers\n\n\n1\n6/2/2024\n8/1/2024\nNaN\n133098.0\nSmx Corporation Limited\nNaN\n1.0\nFull-time (&gt; 32 hours)\n3.0\n3.0\n...\nData Scientists\nData Scientists\nNaN\nNaN\n5613.0\nEmployment Services\n56132.0\nTemporary Help Services\n561320.0\nTemporary Help Services\n\n\n2\n6/2/2024\n7/7/2024\n35.0\n39063746.0\nSedgwick\nNaN\n1.0\nFull-time (&gt; 32 hours)\n5.0\nNaN\n...\nData Scientists\nData Scientists\nNaN\nNaN\n5242.0\nAgencies, Brokerages, and Other Insurance Rela...\n52429.0\nOther Insurance Related Activities\n524291.0\nClaims Adjusting\n\n\n3\n6/2/2024\n7/20/2024\n48.0\n37615159.0\nWells Fargo\nNaN\n1.0\nFull-time (&gt; 32 hours)\n3.0\nNaN\n...\nData Scientists\nData Scientists\n[\\n 6\\n]\n[\\n \"Data Privacy/Protection\"\\n]\n5221.0\nDepository Credit Intermediation\n52211.0\nCommercial Banking\n522110.0\nCommercial Banking\n\n\n4\n6/2/2024\n6/17/2024\n15.0\n0.0\nUnclassified\nNaN\n3.0\nPart-time / full-time\nNaN\nNaN\n...\nData Scientists\nData Scientists\nNaN\nNaN\n9999.0\nUnclassified Industry\n99999.0\nUnclassified Industry\n999999.0\nUnclassified Industry\n\n\n\n\n5 rows × 104 columns"
  },
  {
    "objectID": "data_cleaning.html#handling-missing-values",
    "href": "data_cleaning.html#handling-missing-values",
    "title": "Data Cleaning",
    "section": "",
    "text": "Code\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nos.makedirs(\"figureswxw\", exist_ok=True)\n\n\n::: {#cell-Missing Value Heatmap .cell execution_count=6}\n\nCode\nimport missingno as msno\nimport matplotlib.pyplot as plt\nmsno.heatmap(df1)\n\nplt.title(\"Missing Values Heatmap\")\nplt.tight_layout()\nplt.savefig(\"figureswxw/missing_values_heatmap.png\", dpi=300)\nplt.show()\n\n\n\n\n\nMissing values in the dataset\n\n\n\n:::\n\n\n\n\n\n\n\nCode\n# Drop columns with &gt;50% missing values\ndf1.dropna(axis=1, thresh=len(df1) * 0.5, inplace=True)\n\n\nif \"SALARY\" in df1.columns:\n    df1[\"SALARY\"] = df1[\"SALARY\"].fillna(df1[\"SALARY\"].median())\n\n    df1[\"DURATION\"] = df1[\"DURATION\"].fillna(df1[\"DURATION\"].median())\n\ncategorical_columns = [\"REMOTE_TYPE_NAME\", \"COMPANY_NAME\", \"MAX_EDULEVELS_NAME\"]\n\nfor col in categorical_columns:\n    if col in df1.columns:\n        df1[col] = df1[col].fillna(\"Unknown\")\n\n\ndf1.info()\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 72498 entries, 0 to 72497\nData columns (total 96 columns):\n #   Column                              Non-Null Count  Dtype  \n---  ------                              --------------  -----  \n 0   POSTED                              72476 non-null  object \n 1   EXPIRED                             64654 non-null  object \n 2   DURATION                            45182 non-null  float64\n 3   COMPANY                             72454 non-null  float64\n 4   COMPANY_NAME                        72498 non-null  object \n 5   EMPLOYMENT_TYPE                     72454 non-null  float64\n 6   EMPLOYMENT_TYPE_NAME                72454 non-null  object \n 7   MIN_YEARS_EXPERIENCE                49352 non-null  float64\n 8   IS_INTERNSHIP                       72454 non-null  object \n 9   REMOTE_TYPE                         72454 non-null  float64\n 10  REMOTE_TYPE_NAME                    72498 non-null  object \n 11  LOCATION                            72454 non-null  object \n 12  CITY                                72454 non-null  object \n 13  CITY_NAME                           72454 non-null  object \n 14  COUNTY                              72454 non-null  float64\n 15  COUNTY_NAME                         72454 non-null  object \n 16  MSA                                 68549 non-null  float64\n 17  MSA_NAME                            68549 non-null  object \n 18  STATE                               72454 non-null  float64\n 19  STATE_NAME                          72454 non-null  object \n 20  COUNTY_OUTGOING                     72454 non-null  float64\n 21  COUNTY_NAME_OUTGOING                72454 non-null  object \n 22  COUNTY_INCOMING                     72454 non-null  float64\n 23  COUNTY_NAME_INCOMING                72454 non-null  object \n 24  MSA_OUTGOING                        68549 non-null  float64\n 25  MSA_NAME_OUTGOING                   68549 non-null  object \n 26  MSA_INCOMING                        68536 non-null  float64\n 27  MSA_NAME_INCOMING                   68536 non-null  object \n 28  NAICS2                              72454 non-null  float64\n 29  NAICS2_NAME                         72454 non-null  object \n 30  NAICS3                              72454 non-null  float64\n 31  NAICS3_NAME                         72454 non-null  object \n 32  NAICS4                              72454 non-null  float64\n 33  NAICS4_NAME                         72454 non-null  object \n 34  NAICS5                              72454 non-null  float64\n 35  NAICS5_NAME                         72454 non-null  object \n 36  NAICS6                              72454 non-null  float64\n 37  NAICS6_NAME                         72454 non-null  object \n 38  TITLE                               72454 non-null  object \n 39  TITLE_NAME                          72454 non-null  object \n 40  TITLE_CLEAN                         72358 non-null  object \n 41  SKILLS                              72454 non-null  object \n 42  SKILLS_NAME                         72454 non-null  object \n 43  SPECIALIZED_SKILLS                  72454 non-null  object \n 44  SPECIALIZED_SKILLS_NAME             72454 non-null  object \n 45  CERTIFICATIONS                      72454 non-null  object \n 46  CERTIFICATIONS_NAME                 72454 non-null  object \n 47  COMMON_SKILLS                       72454 non-null  object \n 48  COMMON_SKILLS_NAME                  72454 non-null  object \n 49  SOFTWARE_SKILLS                     72454 non-null  object \n 50  SOFTWARE_SKILLS_NAME                72454 non-null  object \n 51  ONET                                72454 non-null  object \n 52  ONET_NAME                           72454 non-null  object \n 53  ONET_2019                           72454 non-null  object \n 54  ONET_2019_NAME                      72454 non-null  object \n 55  CIP6                                72454 non-null  object \n 56  CIP6_NAME                           72454 non-null  object \n 57  CIP4                                72454 non-null  object \n 58  CIP4_NAME                           72454 non-null  object \n 59  CIP2                                72454 non-null  object \n 60  CIP2_NAME                           72454 non-null  object \n 61  SOC_2021_2                          72454 non-null  object \n 62  SOC_2021_2_NAME                     72454 non-null  object \n 63  SOC_2021_3                          72454 non-null  object \n 64  SOC_2021_3_NAME                     72454 non-null  object \n 65  SOC_2021_4                          72454 non-null  object \n 66  SOC_2021_4_NAME                     72454 non-null  object \n 67  SOC_2021_5                          72454 non-null  object \n 68  SOC_2021_5_NAME                     72454 non-null  object \n 69  LOT_CAREER_AREA                     72454 non-null  float64\n 70  LOT_CAREER_AREA_NAME                72454 non-null  object \n 71  LOT_OCCUPATION                      72454 non-null  float64\n 72  LOT_OCCUPATION_NAME                 72454 non-null  object \n 73  LOT_SPECIALIZED_OCCUPATION          72454 non-null  float64\n 74  LOT_SPECIALIZED_OCCUPATION_NAME     72454 non-null  object \n 75  LOT_OCCUPATION_GROUP                72454 non-null  float64\n 76  LOT_OCCUPATION_GROUP_NAME           72454 non-null  object \n 77  LOT_V6_SPECIALIZED_OCCUPATION       72454 non-null  float64\n 78  LOT_V6_SPECIALIZED_OCCUPATION_NAME  72454 non-null  object \n 79  LOT_V6_OCCUPATION                   72454 non-null  float64\n 80  LOT_V6_OCCUPATION_NAME              72454 non-null  object \n 81  LOT_V6_OCCUPATION_GROUP             72454 non-null  float64\n 82  LOT_V6_OCCUPATION_GROUP_NAME        72454 non-null  object \n 83  LOT_V6_CAREER_AREA                  72454 non-null  float64\n 84  LOT_V6_CAREER_AREA_NAME             72454 non-null  object \n 85  SOC_2_NAME                          72454 non-null  object \n 86  SOC_3_NAME                          72454 non-null  object \n 87  SOC_4                               72454 non-null  object \n 88  SOC_4_NAME                          72454 non-null  object \n 89  SOC_5_NAME                          72454 non-null  object \n 90  NAICS_2022_4                        72454 non-null  float64\n 91  NAICS_2022_4_NAME                   72454 non-null  object \n 92  NAICS_2022_5                        72454 non-null  float64\n 93  NAICS_2022_5_NAME                   72454 non-null  object \n 94  NAICS_2022_6                        72454 non-null  float64\n 95  NAICS_2022_6_NAME                   72454 non-null  object \ndtypes: float64(28), object(68)\nmemory usage: 53.1+ MB"
  },
  {
    "objectID": "data_cleaning.html#remove-duplicates",
    "href": "data_cleaning.html#remove-duplicates",
    "title": "Data Cleaning",
    "section": "",
    "text": "Code\ndf1.drop_duplicates(subset=[\"TITLE_CLEAN\", \"COMPANY_NAME\", \"CITY_NAME\", \"POSTED\"], inplace=True)\n\ndf1[\"REMOTE_TYPE_NAME\"].value_counts(dropna=False)\ndf1[\"EMPLOYMENT_TYPE_NAME\"].value_counts(dropna=False)\n\n\nEMPLOYMENT_TYPE_NAME\nFull-time (&gt; 32 hours)      68493\nPart-time (â‰¤ 32 hours)     2278\nPart-time / full-time         972\nNaN                            17\nName: count, dtype: int64\n\n\n\n\nCode\n#improve\n\ndf1[\"EMPLOYMENT_TYPE_NAME\"] = df1[\"EMPLOYMENT_TYPE_NAME\"].replace({\n    \"Part-time (â‰¤ 32 hours)\": \"Part-time (≤ 32 hours)\",\n    \"Part-time / full-time\": \"Part-time / Full-time\"\n})\ndf1[\"EMPLOYMENT_TYPE_NAME\"] = df1[\"EMPLOYMENT_TYPE_NAME\"].fillna(\"Unknown\")\ndf1[\"EMPLOYMENT_TYPE_NAME\"].value_counts()\n\n\nEMPLOYMENT_TYPE_NAME\nFull-time (&gt; 32 hours)    68493\nPart-time (≤ 32 hours)     2278\nPart-time / Full-time       972\nUnknown                      17\nName: count, dtype: int64\n\n\n\n\nCode\n#double check\n\ncategorical_columns = [\n    \"EMPLOYMENT_TYPE_NAME\",\n    \"REMOTE_TYPE_NAME\",\n    \"COMPANY_NAME\",\n    \"STATE_NAME\",\n    \"CITY_NAME\",\n    \"MAX_EDULEVELS_NAME\"\n]\n\nfor col in categorical_columns:\n    if col in df1.columns:\n        print(f\"Unique values in {col}:\")\n        print(df1[col].value_counts(dropna=False))\n        print(\"-\" * 40)\n\n\nUnique values in EMPLOYMENT_TYPE_NAME:\nEMPLOYMENT_TYPE_NAME\nFull-time (&gt; 32 hours)    68493\nPart-time (≤ 32 hours)     2278\nPart-time / Full-time       972\nUnknown                      17\nName: count, dtype: int64\n----------------------------------------\nUnique values in REMOTE_TYPE_NAME:\nREMOTE_TYPE_NAME\n[None]           56017\nRemote           12376\nHybrid Remote     2237\nNot Remote        1113\nUnknown             17\nName: count, dtype: int64\n----------------------------------------\nUnique values in COMPANY_NAME:\nCOMPANY_NAME\nUnclassified                              3930\nDeloitte                                  2553\nAccenture                                 1498\nPricewaterhouseCoopers                     839\nKPMG                                       451\n                                          ... \nNative American Technology Corporation       1\nStonehill College                            1\nKyrene School District                       1\nBracco Diagnostics                           1\nKobie Properties Limited                     1\nName: count, Length: 12302, dtype: int64\n----------------------------------------\nUnique values in STATE_NAME:\nSTATE_NAME\nTexas                                      7999\nCalifornia                                 7005\nFlorida                                    3609\nVirginia                                   3597\nIllinois                                   3504\nNew York                                   3277\nNorth Carolina                             2719\nGeorgia                                    2634\nOhio                                       2606\nNew Jersey                                 2583\nPennsylvania                               2245\nMassachusetts                              2040\nMichigan                                   1824\nArizona                                    1630\nWashington                                 1605\nMinnesota                                  1466\nColorado                                   1442\nMaryland                                   1345\nTennessee                                  1267\nMissouri                                   1217\nWashington, D.C. (District of Columbia)    1208\nOregon                                     1084\nWisconsin                                  1042\nIndiana                                     950\nConnecticut                                 849\nKansas                                      732\nAlabama                                     682\nSouth Carolina                              637\nUtah                                        634\nKentucky                                    630\nIowa                                        619\nOklahoma                                    603\nNevada                                      585\nArkansas                                    584\nNebraska                                    536\nIdaho                                       474\nMississippi                                 469\nLouisiana                                   451\nRhode Island                                438\nDelaware                                    436\nMaine                                       345\nNew Hampshire                               290\nSouth Dakota                                285\nHawaii                                      258\nNew Mexico                                  252\nAlaska                                      229\nVermont                                     227\nMontana                                     185\nWest Virginia                               159\nNorth Dakota                                148\nWyoming                                     108\nNaN                                          17\nName: count, dtype: int64\n----------------------------------------\nUnique values in CITY_NAME:\nCITY_NAME\nNew York, NY      2122\nChicago, IL       1782\nAtlanta, GA       1688\nAustin, TX        1457\nHouston, TX       1413\n                  ... \nBristow, VA          1\nRobbins, NC          1\nClarksburg, MD       1\nColumbia, IL         1\nHarahan, LA          1\nName: count, Length: 3842, dtype: int64\n----------------------------------------"
  },
  {
    "objectID": "data_cleaning.html#remote-type-distribution",
    "href": "data_cleaning.html#remote-type-distribution",
    "title": "Data Cleaning",
    "section": "2.1 Remote Type distribution",
    "text": "2.1 Remote Type distribution\n\n\nCode\nremote_counts = df1[\"REMOTE_TYPE_NAME\"].value_counts()\n\nplt.figure(figsize=(10,6))\nax = sns.barplot(\n    x=remote_counts.index, \n    y=remote_counts.values, \n    hue=remote_counts.index,          \n    palette=\"Set2\"                   \n)\n           \n\nplt.title(\"Distribution of Remote Work Types\", fontsize=14)\nplt.ylabel(\"Number of Job Postings\")\nplt.xlabel(\"Remote Type\")\nplt.grid(axis='y', linestyle='--', alpha=0.7)\nplt.tight_layout()\nplt.savefig(\"figureswxw/remote_type_distribution.png\", dpi=300)\nplt.show()\n\n\n\n\n\nRemote type distribution"
  },
  {
    "objectID": "data_cleaning.html#top-10-states-by-job-postings",
    "href": "data_cleaning.html#top-10-states-by-job-postings",
    "title": "Data Cleaning",
    "section": "2.2 Top 10 states by job postings",
    "text": "2.2 Top 10 states by job postings\n\n\nCode\nimport os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nif os.path.exists(\"data/lightcast_job_postings.csv\"):\n    df1 = pd.read_csv(\"data/lightcast_job_postings.csv\")\n    \n    city_counts = df1[\"CITY_NAME\"].dropna().value_counts().head(10)\n    \n    plt.figure(figsize=(10,5))\n    sns.barplot(x=city_counts.index, y=city_counts.values, palette=\"Accent\")\n    plt.title(\"Top 10 Cities by Job Postings\")\n    plt.ylabel(\"Number of Job Postings\")\n    plt.xlabel(\"City\")\n    plt.xticks(rotation=30)\n    plt.grid(axis='y', linestyle='--', alpha=0.7)\n    plt.tight_layout()\n    plt.savefig(\"figureswxw/top_cities_job_postings.png\", dpi=300)\n    plt.show()\n\nelse:\n    print(\"Data file not found. Skipping data load and city barplot.\")"
  },
  {
    "objectID": "data_cleaning.html#top-10-cities-by-job-postings",
    "href": "data_cleaning.html#top-10-cities-by-job-postings",
    "title": "Data Cleaning",
    "section": "2.3 Top 10 cities by job postings",
    "text": "2.3 Top 10 cities by job postings\n\n\nCode\ncity_counts = df1[\"CITY_NAME\"].value_counts().head(10)\nplt.figure(figsize=(10,5))\nsns.barplot(x=city_counts.index, y=city_counts.values, palette=\"Accent\")\nplt.title(\"Top 10 Cities by Job Postings\")\nplt.ylabel(\"Number of Job Postings\")\nplt.xlabel(\"City\")\nplt.xticks(rotation=30)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\nplt.tight_layout()\nplt.savefig(\"figureswxw/top_cities_job_postings.png\", dpi=300)\nplt.show()"
  },
  {
    "objectID": "data_cleaning.html#remote-type-by-top-5-states",
    "href": "data_cleaning.html#remote-type-by-top-5-states",
    "title": "Data Cleaning",
    "section": "2.4 Remote Type by Top 5 States",
    "text": "2.4 Remote Type by Top 5 States\n\n\nCode\ntop_states = df1[\"STATE_NAME\"].value_counts().head(5).index\ndf_top = df1[df1[\"STATE_NAME\"].isin(top_states)]\n\n\npivot = df_top.groupby([\"STATE_NAME\", \"REMOTE_TYPE_NAME\"]).size().unstack(fill_value=0)\n\nplt.figure(figsize=(10,6))\nsns.heatmap(pivot, annot=True, fmt=\"d\", cmap=\"Blues\")\nplt.title(\"Heatmap: Remote Type Count in Top 5 States\")\nplt.tight_layout()\nplt.savefig(\"figureswxw/heatmap_remote_type_top_states.png\", dpi=300)\nplt.show()"
  },
  {
    "objectID": "data_cleaning.html#industry-distribution-by-state",
    "href": "data_cleaning.html#industry-distribution-by-state",
    "title": "Data Cleaning",
    "section": "2.5 Industry Distribution by State",
    "text": "2.5 Industry Distribution by State\n\n\nCode\ntop_industries = df_top[\"NAICS_2022_6_NAME\"].value_counts().head(6).index\ndf_top[\"NAICS_GROUPED\"] = df_top[\"NAICS_2022_6_NAME\"].where(df_top[\"NAICS_2022_6_NAME\"].isin(top_industries), \"Other\")\n\n\npivot_industry = df_top.groupby([\"STATE_NAME\", \"NAICS_GROUPED\"]).size().unstack(fill_value=0)\n\npivot_industry.plot(kind=\"bar\", stacked=True, figsize=(12,8), colormap=\"Set1\")\nplt.title(\"Job Postings by Major Industry in Top 5 States\")\nplt.ylabel(\"Number of Job Postings\")\nplt.xlabel(\"State\")\nplt.xticks(rotation=0)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\nplt.legend(\n    title=\"NAICS_GROUPED\",\n    fontsize=10,\n    title_fontsize=10,\n    loc='upper center',\n    bbox_to_anchor=(0.5, -0.15),  \n    ncol=2,  \n    frameon=False  \n)\nplt.tight_layout()\nplt.savefig(\"figureswxw/industry_by_state_top_major.png\", dpi=300)\nplt.show()"
  },
  {
    "objectID": "data_cleaning.html#time-trend-of-remote-work-types",
    "href": "data_cleaning.html#time-trend-of-remote-work-types",
    "title": "Data Cleaning",
    "section": "2.6 Time Trend of Remote Work Types",
    "text": "2.6 Time Trend of Remote Work Types\n\n\nCode\nif \"POSTED\" in df1.columns:\n    df1[\"POSTED_DATE\"] = pd.to_datetime(df1[\"POSTED\"], errors='coerce')\n    df1 = df1.dropna(subset=[\"POSTED_DATE\"])\n    df1[\"POSTED_MONTH\"] = df1[\"POSTED_DATE\"].dt.to_period(\"M\")\n    \n    trend = df1.groupby([\"POSTED_MONTH\", \"REMOTE_TYPE_NAME\"]).size().unstack(fill_value=0)\n    \n    trend.plot(figsize=(14,7))\n    plt.title(\"Remote Work Trends Over Time\", fontsize=14)\n    plt.ylabel(\"Number of Job Postings\")\n    plt.xlabel(\"Month\")\n    plt.grid(axis='y', linestyle='--', alpha=0.7)\n    plt.tight_layout()\n    plt.savefig(\"figureswxw/remote_trend_over_time.png\", dpi=300)\n    plt.show()\nelse:\n    print(\"POSTED column not found in dataset.\")"
  },
  {
    "objectID": "data_cleaning.html#load-dataset",
    "href": "data_cleaning.html#load-dataset",
    "title": "Data Cleaning",
    "section": "",
    "text": "Code\nimport pandas as pd\ndf1 = pd.read_csv(\"./data/lightcast_job_postings.csv\")\n\n\n/var/folders/4f/s815nnpx1_15rfdwxj6cwrtr0000gn/T/ipykernel_5616/3038307670.py:2: DtypeWarning: Columns (19,30) have mixed types. Specify dtype option on import or set low_memory=False.\n  df1 = pd.read_csv(\"./data/lightcast_job_postings.csv\")\n\n\n\n\nCode\ndf1.head()\ndf1.info()\ndf1.describe()\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 72498 entries, 0 to 72497\nColumns: 131 entries, ID to NAICS_2022_6_NAME\ndtypes: float64(38), object(93)\nmemory usage: 72.5+ MB\n\n\n\n\n\n\n\n\n\nDUPLICATES\nDURATION\nMODELED_DURATION\nCOMPANY\nMIN_EDULEVELS\nMAX_EDULEVELS\nEMPLOYMENT_TYPE\nMIN_YEARS_EXPERIENCE\nMAX_YEARS_EXPERIENCE\nSALARY\n...\nLOT_OCCUPATION_GROUP\nLOT_V6_SPECIALIZED_OCCUPATION\nLOT_V6_OCCUPATION\nLOT_V6_OCCUPATION_GROUP\nLOT_V6_CAREER_AREA\nNAICS_2022_2\nNAICS_2022_3\nNAICS_2022_4\nNAICS_2022_5\nNAICS_2022_6\n\n\n\n\ncount\n72476.000000\n45182.000000\n53208.000000\n7.245400e+04\n72454.000000\n16315.000000\n72454.000000\n49352.000000\n8430.000000\n30808.000000\n...\n72454.000000\n7.245400e+04\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n\n\nmean\n1.081627\n22.322695\n19.737615\n3.702704e+07\n31.482527\n2.833834\n1.058768\n5.486444\n3.773903\n117953.755031\n...\n2239.204475\n2.239318e+07\n223931.694096\n2239.204475\n22.281158\n58.352555\n587.864590\n5883.121995\n58834.317125\n588345.683937\n\n\nstd\n2.807512\n14.359085\n12.963769\n3.015089e+07\n44.747433\n0.584028\n0.286997\n3.322241\n2.576739\n45133.878359\n...\n285.424309\n2.854275e+06\n28542.747473\n285.424309\n2.854360\n18.626415\n186.259064\n1864.093904\n18642.971892\n186431.744508\n\n\nmin\n0.000000\n0.000000\n0.000000\n0.000000e+00\n0.000000\n1.000000\n1.000000\n0.000000\n0.000000\n15860.000000\n...\n1111.000000\n1.111101e+07\n111110.000000\n1111.000000\n11.000000\n11.000000\n111.000000\n1111.000000\n11115.000000\n111150.000000\n\n\n25%\n0.000000\n11.000000\n10.000000\n6.505993e+06\n2.000000\n3.000000\n1.000000\n3.000000\n2.000000\n84928.500000\n...\n2310.000000\n2.310101e+07\n231010.000000\n2310.000000\n23.000000\n52.000000\n522.000000\n5223.000000\n52232.000000\n522320.000000\n\n\n50%\n0.000000\n18.000000\n16.000000\n3.761516e+07\n2.000000\n3.000000\n1.000000\n5.000000\n3.000000\n116300.000000\n...\n2311.000000\n2.311131e+07\n231113.000000\n2311.000000\n23.000000\n54.000000\n541.000000\n5415.000000\n54151.000000\n541519.000000\n\n\n75%\n1.000000\n32.000000\n28.000000\n4.330689e+07\n99.000000\n3.000000\n1.000000\n8.000000\n5.000000\n145600.000000\n...\n2311.000000\n2.311131e+07\n231113.000000\n2311.000000\n23.000000\n56.000000\n561.000000\n5614.000000\n56149.000000\n561499.000000\n\n\nmax\n100.000000\n59.000000\n59.000000\n1.082365e+08\n99.000000\n4.000000\n3.000000\n15.000000\n14.000000\n500000.000000\n...\n2712.000000\n2.712111e+07\n271211.000000\n2712.000000\n27.000000\n99.000000\n999.000000\n9999.000000\n99999.000000\n999999.000000\n\n\n\n\n8 rows × 38 columns"
  }
]